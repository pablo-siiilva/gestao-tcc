<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="/css/reset.css" rel="stylesheet">
    <link href="/css/paginaListaAdministrador.css" rel="stylesheet">
    <title>GradMate</title>
    <link rel="icon" type="image/x-icon" href="/img/favicon.png">
</head>

<body class="fade-in">
    <div id="loading" class="loading"><img src="/img/loading.gif"></div>
    <%- include('partials/backButton.ejs') %>
    <div class="container">
        <div class="topRow">
            <%- include('partials/searchBox.ejs') %>
            <button class="addButton" onclick="toggleAddModal()">Adicionar projeto ‚ûï</button>
        </div>
        <div class="objectListWrapper">
            <% if (!projetos || Object.keys(projetos).length === 0) { %>
                <p>Ops! Parece que n√£o existe nenhum projeto cadastrado ainda.</p>
            <% } else { %>
                <% for (i = 0; i < projetos.length; i++) { %>
                    <% let projeto = projetos[i] %>
                    <div class="objectListItem">
                        <span class="span-row span-row-large">
                            <%= projeto.nome %>
                        </span>
                        <% if (projeto.Curso) { %>
                            <span class="span-row span-row-large">
                                <%= projeto.Curso.nome %>
                            </span>
                        <% } %>
                        <div class="flex-end-buttons-row">
                            <button class="flex-end-button" onclick="toggleFilesModal('<%= projeto.id %>')">üíæ</button>
                            <button class="flex-end-button" onclick="toggleMembersModal('<%= projeto.id %>')">üë§</button>
                            <button class="flex-end-button" onclick="toggleDeleteModal('<%= JSON.stringify(projeto) %>')">üóëÔ∏è</button>
                            <button class="flex-end-button" onclick="toggleEditModal('<%= JSON.stringify(projeto) %>')">‚úèÔ∏è</button>
                        </div>
                    </div>
                <% } %>
            <% } %>
        </div>
    </div>
    <div id="addModal" class="modal">
        <div class="modalContent">
            <button class="exitModalButton" onclick="toggleAddModal()">‚ùå</button>
            <h2>Adicionar novo projeto</h2>
            <form class="form" action="/projeto" method="POST" onsubmit="return validateAddForm()">
                <input type="text" class="row textInput" name="nome" id="add-nome" placeholder="Nome" required maxlength="50">
                <textarea class="row textInput textInputArea" name="descricao" id="add-descricao" placeholder="Descri√ß√£o" maxlength="500"></textarea>
                <select class="selectInput" name="situacao" id="add-situacao">
                    <option value="0">Pr√©-projeto</option>
                    <option value="1">Qualifica√ß√£o</option>
                    <option value="2">Defesa</option>
                    <option value="3">Conclu√≠do</option>
                    <option value="4">Trancado</option>
                </select>
                <select class="selectInput" name="curso" id="add-curso">
                    <% if (cursos) for (let i = 0; i < cursos.length; i++) { %>
                        <% const curso = cursos[i] %>
                        <option value="<%= curso.id %>"><%= curso.nome %></option>
                    <% } %>
                </select>
                <div class="row">
                    <input type="submit" value="Adicionar" class="row botaoSubmit">
                </div>
            </form>
        </div>
    </div>
    <script>
        function validateAddForm() {
            const nomeInput = document.getElementById('add-nome');
            const descricaoInput = document.getElementById('add-descricao');

            if (nomeInput.value.trim() === '' || nomeInput.value.length > 50) {
                alert('Por favor, preencha o campo de nome corretamente (m√°ximo de 50 caracteres).');
                return false;
            }

            if (descricaoInput.value.trim() === '' || descricaoInput.value.length > 500) {
                alert('Por favor, preencha o campo de descri√ß√£o corretamente (m√°ximo de 500 caracteres).');
                return false;
            }

            return true;
        }

        function toggleAddModal() {
            const addModal = document.getElementById('addModal');

            if (addModal.style.display === 'flex') {
                addModal.style.display = 'none';
                return;
            }
            addModal.style.display = 'flex';
        }
    </script>
    <div id="editModal" class="modal">
        <div class="modalContent">
            <button class="exitModalButton" onclick="toggleEditModal()">‚ùå</button>
            <h2>Editar projeto</h2>
            <form class="form" action="/projeto/edit" method="POST" onsubmit="return validateEditForm()">
                <input type="hidden" name="id" id="edit-id">
                <input type="text" class="row textInput" name="nome" id="edit-nome" placeholder="Nome" required maxlength="50">
                <textarea class="row textInput textInputArea" name="descricao" id="edit-descricao" placeholder="Descri√ß√£o" maxlength="500"></textarea>
                <select class="selectInput" name="situacao" id="edit-situacao">
                    <option value="0">Pr√©-projeto</option>
                    <option value="1">Qualifica√ß√£o</option>
                    <option value="2">Defesa</option>
                    <option value="3">Conclu√≠do</option>
                    <option value="4">Trancado</option>
                </select>
                <select class="selectInput" name="curso" id="edit-curso">
                    <% if (cursos) for (let i = 0; i < cursos.length; i++) { %>
                        <% const curso = cursos[i] %>
                        <option value="<%= curso.id %>"><%= curso.nome %></option>
                    <% } %>
                </select>
                <div class="row">
                    <input type="submit" value="Salvar" class="row botaoSubmit">
                </div>
            </form>
        </div>
    </div>
    <script>
        function validateEditForm() {
            const nomeInput = document.getElementById('edit-nome');
            const descricaoInput = document.getElementById('edit-descricao');

            if (nomeInput.value.trim() === '' || nomeInput.value.length > 50) {
                alert('Por favor, preencha o campo de nome corretamente (m√°ximo de 50 caracteres).');
                return false;
            }

            if (descricaoInput.value.trim() === '' || descricaoInput.value.length > 500) {
                alert('Por favor, preencha o campo de descri√ß√£o corretamente (m√°ximo de 500 caracteres).');
                return false;
            }

            return true;
        }

        function toggleEditModal(jsonProjeto) {
            const editModal = document.getElementById('editModal');

            if (jsonProjeto) {
                const projeto = JSON.parse(jsonProjeto);

                const nomeInput = document.getElementById('edit-nome');
                const descricaoInput = document.getElementById('edit-descricao');
                const situacaoInput = document.getElementById('edit-situacao');
                const cursoInput = document.getElementById('edit-curso');
                const idInput = document.getElementById('edit-id');
            
                nomeInput.value = projeto.nome;
                descricaoInput.value = projeto.descricao;
                situacaoInput.value = projeto.status;
                cursoInput.value = projeto.id_curso;
                idInput.value = projeto.id;
            }

            if (editModal.style.display === 'flex') {
                editModal.style.display = 'none';
                return;
            }
            editModal.style.display = 'flex';
        }
    </script>
    <div id="deleteModal" class="modal">
        <div class="modalContent">
            <button class="exitModalButton" onclick="toggleDeleteModal(null)">‚ùå</button>
            <h2>Voc√™ deseja remover <span id="delete-nome"></span>?</h2>
            <div class="row">
                <button id="delete-no" class="botaoSubmit" onclick="toggleDeleteModal(null)">N√£o</button>
                <button id="delete-yes" class="botaoSubmit">Sim</button>
            </div>
        </div>
    </div>
    <script>
        function toggleDeleteModal(jsonProjeto) {
            const deleteModal = document.getElementById('deleteModal');

            if (jsonProjeto) {
                const projeto = JSON.parse(jsonProjeto);

                const nome = document.getElementById("delete-nome");
                const deleteButton = document.getElementById("delete-yes")

                nome.innerText = projeto.nome;
                deleteButton.onclick = function () {
                    location.href = `/projeto/delete/${projeto.id}`;
                };
                deleteButton.focus()
            }

            if (deleteModal.style.display === 'flex') {
                deleteModal.style.display = 'none';
                return;
            }
            deleteModal.style.display = 'flex';
        }
    </script>
    <div id="filesModal" class="modal">
        <div class="modalContent">
            <button class="exitModalButton" onclick="toggleFilesModal()">‚ùå</button>
            <h2>Gerar arquivos</h2>
                <form class="form" action="/projeto/gerar-arquivos" method="POST">
                    <input type="hidden" name="id" id="files-id">
                    
                    <label>Professor convidado 1:</label>
                    <input type="text" class="row textInput" name="convidado1" id="files-convidado1" placeholder="Nome do professor convidado (Opcional)" maxlength="50">
                    <label>Professor convidado 2:</label>
                    <input type="text" class="row textInput" name="convidado2" id="files-convidado2" placeholder="Nome do professor convidado (Opcional)" maxlength="50">
                    
                    <select class="selectInput" style="grid-template-columns: max-content; min-width: 20vw" name="tipo_arquivo" id="files-tipo">
                        <option value="0">Ata de defesa</option>
                        <option value="1">Ata de qualifica√ß√£o</option>
                        <option value="2">Certificado de defesa do orientador</option>
                        <option value="3">Certificado de qualifica√ß√£o do orientador</option>
                        <option value="4">Certificado ADS</option>
                        <option value="5">Ficha avaliativa</option>
                        <option value="6">Termo de autoriza√ß√£o FATEC</option>
                    </select>

                    <div class="row">
                        <input type="submit" value="Gerar e baixar" class="row botaoSubmit">
                    </div>
                </form>
        </div>
    </div>
    <script>
        function toggleFilesModal(idProjeto) {
            const filesModal = document.getElementById('filesModal');

            const idInput = document.getElementById('files-id');
            idInput.value = idProjeto;

            if (filesModal.style.display === 'flex') {
                filesModal.style.display = 'none';
                return;
            }
            filesModal.style.display = 'flex';
        }
    </script>
    <div id="membersModal" class="modal">
        <div class="modalContent-l">
            <button class="exitModalButton" onclick="toggleMembersModal(null)">‚ùå</button>
            <h2>Vincular membros ao projeto</h2>
            <form class="formMembros" action="/projeto/vincular" method="POST">
                <input type="hidden" name="id" id="members-id">
                <div class="formMembrosListas">
                    <div class="membersLista listaAlunos">
                        <h3 style="margin-bottom: 10px;">Alunos</h3>
                        <%- include('partials/searchBoxMini.ejs', { id: 'members-listaAlunos-search', placeholder: 'Filtrar alunos...', oninput: 'filterStudents()' }) %>
                        <div id="members-listaAlunos" class="membersListaInner">
                        </div>
                    </div>
                    <div class="membersLista listaProfessores">
                        <h3 style="margin-bottom: 10px;">Orientador</h3>
                        <%- include('partials/searchBoxMini.ejs', { id: 'members-listaProfessores-search', placeholder: 'Filtrar professores...', oninput: 'filterProfessors()' }) %>
                        <div id="members-listaProfessores" class="membersListaInner">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <input type="submit" value="Vincular" class="row botaoSubmit">
                </div>
            </form>
        </div>
    </div>
    <script>
        function toggleMembersModal(idProjeto) {
            const membersModal = document.getElementById('membersModal');
            const listaAlunosDiv = document.getElementById('members-listaAlunos');
            listaAlunosDiv.innerHTML = '';
            const listaProfessoresDiv = document.getElementById('members-listaProfessores');
            listaProfessoresDiv.innerHTML = '';

            if (membersModal.style.display === 'flex') {
                membersModal.style.display = 'none';
                return;
            }

            const idInput = document.getElementById('members-id');
            idInput.value = idProjeto;

            const loadingScreen = document.getElementById('loading');
            loadingScreen.style.display = 'flex'
            fetch('/api/alunos-e-professores')
                .then(response => response.json())
                .then(data => {
                    console.log(data)

                    const alunos = data.alunos;
                    const alunosProjeto = alunos.filter(aluno => checkIfStudentOnProject(aluno, idProjeto))
                    const alunosForaDoProjeto = alunos.filter(aluno => !checkIfStudentOnProject(aluno, idProjeto))
                    
                    alunosProjeto.forEach(aluno => {
                        listaAlunosDiv.appendChild(buildBasicStudentCheckbox(aluno, true));
                    })
                    alunosForaDoProjeto.forEach(aluno => {
                        listaAlunosDiv.appendChild(buildBasicStudentCheckbox(aluno, false));
                    })

                    const professores = data.professores;
                    const professoresProjeto = professores.filter(professor => checkIfProfessorOnProject(professor, idProjeto))
                    const professoresForaDoProjeto = professores.filter(professor => !checkIfProfessorOnProject(professor, idProjeto))
                    professoresProjeto.forEach(professor => {
                        listaProfessoresDiv.appendChild(buildBasicProfessorRadio(professor, true));
                    })
                    professoresForaDoProjeto.forEach(professor => {
                        listaProfessoresDiv.appendChild(buildBasicProfessorRadio(professor, false));
                    })

                    loadingScreen.style.display = 'none';
                    membersModal.style.display = 'flex';
            })
            .catch(error => {
                console.error('Erro ao buscar a lista de alunos e professores:', error);
                loadingScreen.style.display = 'none';
            });
        }

        function checkIfProfessorOnProject(obj, idProjeto) {
            var projetos = obj.Projeto;
            if (projetos)
                return projetos.some((projeto) => {
                    return projeto.id == idProjeto
                    })
            else
                return false;
        }

        function checkIfStudentOnProject(obj, idProjeto) {
            var projeto = obj.Projeto;
            if (projeto)
                return projeto.id = idProjeto;
            else
                return false;
        }

        function buildBasicStudentCheckbox(aluno, checked) {
            var checkbox = document.createElement("input");
            checkbox.type = "checkbox";
            checkbox.id = "checkbox" + aluno.id;
            checkbox.name = "idAlunos[]";
            checkbox.value = aluno.id;
            if (checked) {
                checkbox.checked = true;
            }

            var label = document.createElement("label");
            label.htmlFor = "checkbox" + aluno.id;
            label.appendChild(document.createTextNode(aluno.nome));

            var container = document.createElement("div");
            container.classList.add("inputContainer")
            container.appendChild(label);
            container.appendChild(checkbox);

            return container;
        }

        function buildBasicProfessorRadio(professor, checked) {
            var radio = document.createElement("input");
            radio.type = "radio";
            radio.id = "radio" + professor.id;
            radio.name = "idProfessor";
            radio.value = professor.id;
            if (checked) {
                radio.checked = true;
            }

            var label = document.createElement("label");
            label.htmlFor = "radio" + professor.id;
            label.appendChild(document.createTextNode(professor.nome));

            var container = document.createElement("div");
            container.classList.add("inputContainer")
            container.appendChild(label);
            container.appendChild(radio);

            return container;
        }
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchBox = document.getElementById('searchBox');
            const objectListWrapper = document.querySelector('.objectListWrapper');

            searchBox.addEventListener('input', function () {
                const searchTerm = searchBox.value.toLowerCase();

                const objectItems = document.querySelectorAll('.objectListItem');

                objectItems.forEach(item => {
                    const projectName = item.querySelector('.span-row-large').innerText.toLowerCase();
                    if (projectName.includes(searchTerm)) {
                        item.style.display = 'flex';
                    } else {
                        item.style.display = 'none';
                    }
                });
            });
        });

        function filterStudents() {
            const searchBox = document.getElementById('members-listaAlunos-search');
            const studentsList = document.getElementById('members-listaAlunos');

            const searchTerm = searchBox.value.toLowerCase();

            const studentCheckboxes = studentsList.querySelectorAll('.inputContainer');

            studentCheckboxes.forEach(checkbox => {
                const studentName = checkbox.innerText.toLowerCase();
                if (studentName.includes(searchTerm)) {
                    checkbox.style.display = 'flex';
                } else {
                    checkbox.style.display = 'none';
                }
            });
        }

        function filterProfessors() {
            const searchBox = document.getElementById('members-listaProfessores-search');
            const professorsList = document.getElementById('members-listaProfessores');

            const searchTerm = searchBox.value.toLowerCase();

            const professorRadios = professorsList.querySelectorAll('.inputContainer');

            professorRadios.forEach(radio => {
                const professorName = radio.innerText.toLowerCase();
                if (professorName.includes(searchTerm)) {
                    radio.style.display = 'flex';
                } else {
                    radio.style.display = 'none';
                }
            });
        }
    </script>
</body>

</html>
